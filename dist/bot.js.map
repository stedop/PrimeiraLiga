{"version":3,"sources":["bot.js"],"names":["Object","defineProperty","exports","value","_sortBy2","require","_sortBy3","_interopRequireDefault","_find2","_find3","_merge2","_merge3","_each2","_each3","_defaults2","_defaults3","_axios","_axios2","_snoowrap","_snoowrap2","_dot","_dot2","_teamcodes","_teamcodes2","_dateformat","_dateformat2","obj","__esModule","default","bot","constructor","_ref","arguments","length","undefined","userAgent","clientId","clientSecret","refreshToken","subreddit","apiKey","leagueId","Error","subbreddit","standingsURI","fixturesURI","competitionUri","data","errorBag","__initRedditClient","__initApiClient","__initTemplateEngine","redditClient","clientArgs","baseURL","timeout","headers","apiClient","create","templateEngine","process","templateSettings","strip","path","__replaceText","_ref2","old","begin","end","replacement","regstring","regex","RegExp","replace","getStandings","_this","get","then","response","standings","getFixtures","_this2","fixtures","getCompetition","_this3","competition","getCurrentSideBar","_this4","getSubreddit","getSettings","sidebar","description","getData","Promise","all","doTable","self","update","arr","key","newval","match","push","standing","entry","teamInfo","teamName","style","leagueCaption","table","doFixtures","date","Date","homeTeamName","awayTeamName","updateSidebar","_this5","editSettings","completed"],"mappings":"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","file":"bot.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _sortBy2 = require('lodash/sortBy');\n\nvar _sortBy3 = _interopRequireDefault(_sortBy2);\n\nvar _find2 = require('lodash/find');\n\nvar _find3 = _interopRequireDefault(_find2);\n\nvar _merge2 = require('lodash/merge');\n\nvar _merge3 = _interopRequireDefault(_merge2);\n\nvar _each2 = require('lodash/each');\n\nvar _each3 = _interopRequireDefault(_each2);\n\nvar _defaults2 = require('lodash/defaults');\n\nvar _defaults3 = _interopRequireDefault(_defaults2);\n\nvar _axios = require('axios');\n\nvar _axios2 = _interopRequireDefault(_axios);\n\nvar _snoowrap = require('snoowrap');\n\nvar _snoowrap2 = _interopRequireDefault(_snoowrap);\n\nvar _dot = require('dot');\n\nvar _dot2 = _interopRequireDefault(_dot);\n\nvar _teamcodes = require('./teamcodes');\n\nvar _teamcodes2 = _interopRequireDefault(_teamcodes);\n\nvar _dateformat = require('dateformat');\n\nvar _dateformat2 = _interopRequireDefault(_dateformat);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass bot {\n\n    /**\n     * @summary initialises the bot\n     *\n     * @param {string} [userAgent] A unique description of what your app does. This argument is not necessary when Snoowrap\n     is running in a browser.\n     * @param {string} [clientId] The client ID of your app (assigned by reddit)\n     * @param {string} [clientSecret] The client secret of your app (assigned by reddit). If you are using a refresh token\n     with an installed app (which does not have a client secret), pass an empty string as your `clientSecret`.\n     * @param {string} [refreshToken] A refresh token for your app.\n     * @param {string} [subreddit] The subreddit name we are going to be managing\n     * @param {string} [apiKey] Key for the stats api\n     * @param {string} [leagueId] Id for the competition\n     */\n    constructor() {\n        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            userAgent = _ref.userAgent,\n            clientId = _ref.clientId,\n            clientSecret = _ref.clientSecret,\n            refreshToken = _ref.refreshToken,\n            subreddit = _ref.subreddit,\n            apiKey = _ref.apiKey,\n            leagueId = _ref.leagueId;\n\n        if (clientId === undefined || clientSecret === undefined || refreshToken === undefined) {\n            throw new Error('Reddit Credentials not supplied');\n        }\n\n        if (apiKey === undefined) {\n            throw new Error('Api Key not supplied');\n        }\n\n        if (leagueId === undefined) {\n            throw new Error('Need a competition ID');\n        }\n\n        (0, _defaults3.default)(this, {\n            userAgent,\n            clientId,\n            clientSecret,\n            refreshToken,\n            subreddit,\n            apiKey,\n            leagueId\n        }, {\n            userAgent: null,\n            clientId: null,\n            clientSecret: null,\n            refreshToken: null,\n            subbreddit: null,\n            apiKey: null,\n            leagueId: 439\n        });\n\n        this.standingsURI = \"competitions/\" + this.leagueId + \"/leagueTable\";\n        this.fixturesURI = \"competitions/\" + this.leagueId + \"/fixtures?timeFrame=n7\";\n        this.competitionUri = \"competitions/\" + this.leagueId;\n        this.data = {};\n        this.errorBag = {};\n\n        this.__initRedditClient();\n        this.__initApiClient();\n        this.__initTemplateEngine();\n    }\n\n    /**\n     * Sets up snoowrap\n     *\n     * @private\n     */\n    __initRedditClient() {\n        this.redditClient = new _snoowrap2.default({\n            userAgent: this.userAgent,\n            clientId: this.clientId,\n            clientSecret: this.clientSecret,\n            refreshToken: this.refreshToken\n        });\n    }\n\n    /**\n     * Sets up the Axios api client\n     *\n     * @private\n     */\n    __initApiClient() {\n        var clientArgs = {\n            baseURL: 'http://api.football-data.org/v1/',\n            timeout: 10000,\n            headers: {\n                \"X-Auth-Token\": this.apiKey,\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\"\n            }\n        };\n        this.apiClient = _axios2.default.create(clientArgs);\n    }\n\n    /**\n     * Sets up the Dot template engine\n     *\n     * @private\n     */\n    __initTemplateEngine() {\n        this.templateEngine = _dot2.default.process({ templateSettings: { strip: false }, path: 'views/' });\n    }\n\n    /**\n     * Handles the text replacements\n     *\n     * @param old\n     * @param begin\n     * @param end\n     * @param replacement\n     * @returns {string|*|void|XML}\n     * @private\n     */\n    __replaceText() {\n        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            old = _ref2.old,\n            begin = _ref2.begin,\n            end = _ref2.end,\n            replacement = _ref2.replacement;\n\n        var regstring = '(' + begin + ')([\\\\s\\\\S]*?)(\\\\*\\\\*\\\\*\\\\*\\\\*\\\\*)';\n        var regex = new RegExp(regstring, 'i');\n        return old.replace(regex, replacement);\n    }\n\n    getStandings() {\n        var _this = this;\n\n        return this.apiClient.get(this.standingsURI).then(function (response) {\n            _this.data.standings = response.data;\n        });\n    }\n\n    getFixtures() {\n        var _this2 = this;\n\n        return this.apiClient.get(this.fixturesURI).then(function (response) {\n            _this2.data.fixtures = response.data.fixtures;\n        });\n    }\n\n    getCompetition() {\n        var _this3 = this;\n\n        return this.apiClient.get(this.competitionUri).then(function (response) {\n            _this3.data.competition = response.data;\n        });\n    }\n\n    /**\n     * Gets the current sidebar\n     *\n     * @returns {Promise}\n     */\n    getCurrentSideBar() {\n        var _this4 = this;\n\n        return this.redditClient.getSubreddit(this.subreddit).getSettings().then(function (response) {\n            _this4.data.sidebar = response.description;\n        });\n    }\n\n    /**\n     * get the data form the API\n     *\n     * @returns {Promise}\n     */\n    getData() {\n        return Promise.all([this.getStandings(), this.getFixtures(), this.getCompetition(), this.getCurrentSideBar()]);\n    }\n\n    /**\n     * Handles the league table insert\n     *\n     * @returns bot\n     */\n    doTable() {\n        var self = this;\n\n        var update = function (arr, key, newval) {\n            var match = (0, _find3.default)(arr, key);\n\n            if (match) {\n                (0, _merge3.default)(match, newval);\n            } else {\n                arr.push(newval);\n            }\n        };\n\n        // add the team badges\n        (0, _each3.default)(this.data.standings.standing, function (entry) {\n            var teamInfo = _teamcodes2.default[entry.teamName];\n            update(self.data.standings.standing, { 'teamName': entry.teamName }, { 'style': teamInfo.style });\n            update(self.data.standings.standing, { 'teamName': entry.teamName }, { 'teamName': teamInfo.teamName });\n        });\n\n        this.data.sidebar = this.__replaceText({\n            'old': this.data.sidebar,\n            //# [](#pt-NOS) Primeira Liga 2016/17 - Current Table\n            'begin': '# \\\\[\\\\]\\\\(\\\\#pt-NOS\\\\) ' + this.data.standings.leagueCaption + ' - Current Table',\n            'end': '******',\n            'replacement': this.templateEngine.table(this.data)\n        });\n\n        return this;\n    }\n\n    /**\n     * Handles the standing insert\n     *\n     * @returns bot\n     */\n    doFixtures() {\n        var self = this;\n\n        var update = function (arr, key, newval) {\n            var match = (0, _find3.default)(arr, key);\n\n            if (match) {\n                (0, _merge3.default)(match, newval);\n            } else {\n                arr.push(newval);\n            }\n        };\n\n        // ensure that the fixtures are sorted properly\n        this.data.fixtures = (0, _sortBy3.default)(this.data.fixtures, ['date']);\n\n        (0, _each3.default)(this.data.fixtures, function (entry) {\n            var date = new Date(entry.date);\n\n            // add the team badges\n            update(self.data.fixtures, { 'homeTeamName': entry.homeTeamName }, {\n                'homeTeamName': _teamcodes2.default[entry.homeTeamName].teamName,\n                'homeTeamStyle': _teamcodes2.default[entry.homeTeamName].style\n            });\n            update(self.data.fixtures, { 'awayTeamName': entry.awayTeamName }, {\n                'awayTeamName': _teamcodes2.default[entry.awayTeamName].teamName,\n                'awayTeamStyle': _teamcodes2.default[entry.awayTeamName].style\n            });\n\n            //format the date\n            update(self.data.fixtures, { 'date': entry.date }, { 'date': (0, _dateformat2.default)(date, 'dd mmm.') });\n        });\n\n        this.data.sidebar = this.__replaceText({\n            'old': this.data.sidebar,\n            'begin': '# \\\\[\\\\]\\\\(\\\\#pt-NOS\\\\) ' + this.data.standings.leagueCaption + ' - Fixtures',\n            'end': '\\\\n\\\\n\\\\n******',\n            'replacement': this.templateEngine.fixtures(this.data)\n        });\n\n        return this;\n    }\n\n    /**\n     * Updates the sidebar\n     *\n     * @returns {Promise}\n     */\n    updateSidebar() {\n        var _this5 = this;\n\n        var subreddit = this.subreddit;\n\n        return this.redditClient.getSubreddit(subreddit).editSettings({\n            'description': this.data.sidebar\n        }).then(function () {\n            _this5.data.completed = {};\n            _this5.data.completed.updateSidebar = true;\n        });\n    }\n}\nexports.default = bot;\n//# sourceMappingURL=bot.js.map"]}